name: Build and Deploy
on:
  push:
    branches: [ "master","develope-2" ]
  pull_request:
    branches: [ "master","develop" ]
    
    
jobs:
#   build_on_pr:
#     runs-on: ubuntu-latest
#     if: github.event.pull_request
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#         with:
#           ref: ${{ github.event.pull_request.head.ref }}
#           repository: ${{ github.event.pull_request.head.repo.full_name }}

#       - name: Setup JDK 8
#         uses: actions/setup-java@v2
#         with:
#           java-version: 8
#           distribution: 'adopt'
#       - name: Build with Maven  
#         run: mvn clean install
    
  codeql:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
    steps:
    - name: Checkout code 
      uses: actions/checkout@v2
    - name: Setup JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: 8
        distribution: 'adopt'
#     - name: Initialize CodeQL
#       uses: github/codeql-action/init@v2
#       with:
#         languages: Java    
#     - name: Build with Maven
#       run: mvn clean install
#     - name: Perform CodeQL Analysis
#       uses: github/codeql-action/analyze@v2
#       with:
#         languages: Java
    - name: Setup CodeQL
      uses: github/codeql-action/setup@v1
      with:
          languages: java

    - name: Build and analyze
      run: |
        codeql database create codeql-db --language=java
        codeql analyze codeql-db --format=sarif-latest --output=results.sarif

        results=$(jq -r '.runs[0].tool.driver.runs[0].results | length' results.sarif)
        echo "::set-output name=vulnerabilities::$results"

    - name: Check for vulnerabilities
      run: |
        vulnerabilities=$RUNNER_WORKSPACE/vulnerabilities
        if [[ ${{ steps.build.outputs.vulnerabilities }} -gt 0 ]]; then
          echo "CodeQL found vulnerabilities!"
          echo ${{ steps.build.outputs.vulnerabilities }} > $vulnerabilities
          exit 1
        else
          echo "CodeQL did not find any vulnerabilities."
          echo 0 > $vulnerabilities
        fi
    
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: 8
        distribution: 'adopt'
    - name: Create WAR file 
      run: mvn -B package --file pom.xml
    - name: Upload WAR file as artifact
      uses: actions/upload-artifact@v2 
      with:
        name: Schedular-API
        path: target/schedulerapi-v1.0.war  
        
